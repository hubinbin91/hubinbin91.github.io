<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ES6 on hubinbin&#39;s blog</title>
    <link>https://hubinbin91.github.io/tags/es6/</link>
    <description>Recent content in ES6 on hubinbin&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 04 Jan 2018 19:42:52 +0800</lastBuildDate>
    
	<atom:link href="https://hubinbin91.github.io/tags/es6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>《ES6》随手记之Promise和generator</title>
      <link>https://hubinbin91.github.io/post/web-es6.2/</link>
      <pubDate>Thu, 04 Jan 2018 19:42:52 +0800</pubDate>
      
      <guid>https://hubinbin91.github.io/post/web-es6.2/</guid>
      <description>Promise 1. Promise介绍 Promise是异步编程的一种解决方案，用来替代传统的回调方案。 所谓Promise，简单说就是一个容器，里面保存着某个</description>
    </item>
    
    <item>
      <title>《ES6》随手记之let const</title>
      <link>https://hubinbin91.github.io/post/web-es6.1/</link>
      <pubDate>Thu, 21 Dec 2017 19:42:52 +0800</pubDate>
      
      <guid>https://hubinbin91.github.io/post/web-es6.1/</guid>
      <description>let const var关键字 let和const用于创建块级作用域 1. 不存在变量提升 var 在声明之前使用，值为undefined let和const 在声明之前使用</description>
    </item>
    
    <item>
      <title>《ES6》随手记之ES模块化和类</title>
      <link>https://hubinbin91.github.io/post/web-es6.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hubinbin91.github.io/post/web-es6.3/</guid>
      <description>ES Module ES6模块和CommonJS、AMD等模块 都是运行时确定 整体加载，然后再读取方法。运行时加载 ES6模块编译时加载 严格模式 ES6模块默认采</description>
    </item>
    
  </channel>
</rss>